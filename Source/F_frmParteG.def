CodeBehindForm
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False

Option Compare Database
Option Explicit
Dim gintActualizarIngresosXActividadAux As Integer

Private Sub btnBorrando_Click()
    GenerarPartesGobernanta Me.txtDesde, , True
    Me.lstPartesG.Requery
    Me.lstPartesD.Requery
End Sub

Private Sub btnCancelar_Click()
    On Error Resume Next
    DoCmd.Close
End Sub

Private Sub btnDel_Click()
    If Me.lstReservas.ListIndex = -1 Then Exit Sub
    Dim intR As Integer, strSQL As String
    intR = MsgBox("¿Borrar reserva: " & Me.lstReservas.Column(1) & " - " & Me.lstReservas.Column(2) & " - " & Me.lstReservas.Column(3) & "?", vbOKCancel + vbQuestion)
    If intR <> vbOK Then Exit Sub
    strSQL = "DELETE * FROM tbSalasReservas WHERE IdSalaReserva =" & Me.lstReservas.Column(0)
    CurrentDb.Execute strSQL, dbFailOnError
    Me.lstReservas.Requery
End Sub

Private Sub btnDiaMas_Click()
    DoCmd.Hourglass True
    If Not IsDate(Me.txtDesde) Then Me.txtDesde = Date
    If Me.txtDel.Visible Then
        Call btnSemanaDespues_Click
    Else
        Me.txtDesde = Me.txtDesde + 1
        Call txtDesde_AfterUpdate
    End If
    DoCmd.Hourglass False
End Sub

Private Sub btnDiaMenos_Click()
    DoCmd.Hourglass True
    If Not IsDate(Me.txtDesde) Then Me.txtDesde = Date
    If Me.txtDel.Visible Then
        Call btnSemanaAntes_Click
    Else
        Me.txtDesde = Me.txtDesde - 1
        Call txtDesde_AfterUpdate
    End If
    DoCmd.Hourglass False
End Sub
Private Sub btnSemanaAntes_Click()
    If Not IsDate(Me.txtDesde) Then Me.txtDesde = Date
    Me.txtDesde = Me.txtDesde - 7
    GenerarPartesGobernantaSemana Me.txtDesde, Me.cmbGrupo
    Me.lstPartesG.RowSource = "qryPartesGSemanal"
End Sub

Private Sub btnSemanaDespues_Click()
    If Not IsDate(Me.txtDesde) Then Me.txtDesde = Date
    Me.txtDesde = Me.txtDesde + 7
    GenerarPartesGobernantaSemana Me.txtDesde, Me.cmbGrupo
    Me.lstPartesG.RowSource = "qryPartesGSemanal"
End Sub


Private Sub btnEmplPre_Click()
    Dim strXML As String
    PonXML strXML, "Fecha", CLng(CDate(Me.txtDesde))
    DoCmd.OpenForm "frmEmpl_Presencia", acFormDS, , , , , strXML
    Me.lstEmplPre.Requery
End Sub

Private Sub btnF4_Click()
    Dim varFecha As Variant
    varFecha = adhDoCalendar(Me.txtDesde)
    If IsDate(varFecha) Then
        Me.txtDesde = varFecha
        Call txtDesde_AfterUpdate
    End If
End Sub

Private Sub btnFicha_Click()
    If Me.lstReservas.ListIndex = -1 Then Exit Sub
    Dim lngIdFicha As Long
    If IsNumeric(Me.lstReservas.Column(4)) Then
        lngIdFicha = Me.lstReservas.Column(4)
        DoCmd.OpenForm "frmFichas", , , "IdFichaCab = " & lngIdFicha
    End If
End Sub

Private Sub btnFicha2_Click()
    If Me.lstSerComedor.ListIndex = -1 Then Exit Sub
    Dim lngIdFicha As Long
    If IsNumeric(Me.lstSerComedor.Column(5)) Then
        lngIdFicha = Me.lstSerComedor.Column(5)
        DoCmd.OpenForm "frmFichas", , , "IdFichaCab = " & lngIdFicha
    End If
End Sub

Private Sub btnGenerarParte_Click()
    GenerarPartesGobernanta Me.txtDesde
    Me.lstPartesG.Requery
    Me.lstPartesD.Requery
End Sub

Private Sub btnImprimir_Click()
On Error GoTo Err_btnImprimir_Click

    Dim stDocName As String, i As Integer
    If Not Me.txtDel.Visible Then
        stDocName = "rptParteG"
        DoCmd.OpenReport stDocName, acPreview
    Else
        CurrentDb.Execute "DELETE * FROM auxParteGSemanal", dbFailOnError
        Dim rs As Recordset, rsAux As Recordset
        Set rs = CurrentDb.OpenRecordset("qryPartesGSemanal", dbOpenSnapshot)
        Set rsAux = CurrentDb.OpenRecordset("auxParteGSemanal", dbOpenDynaset)
        While Not rs.EOF
            rsAux.AddNew
            For i = 1 To rsAux.Fields.Count - 1
                rsAux(i) = rs(i - 1)
            Next i
            rsAux.Update
            rs.MoveNext
        Wend
        stDocName = "rptParteGSemanal"
        DoCmd.OpenReport stDocName, acPreview
    End If
Exit_btnImprimir_Click:
    Exit Sub

Err_btnImprimir_Click:
    MsgBox Err.Description
    Resume Exit_btnImprimir_Click
    
    
End Sub

Private Sub btnImprimir_Empl_Click()
    Dim stDocName As String, strW As String

    stDocName = "rptParteG_Empl"
    strW = "Fecha = " & CLng(CDate(Me.txtDesde))
    On Error Resume Next
    DoCmd.OpenReport stDocName, acPreview, , strW
End Sub

Private Sub btnImprimir2_Click()
    Dim stDocName As String

    stDocName = "rptParteD"
    On Error Resume Next
    DoCmd.OpenReport stDocName, acPreview
End Sub

Private Sub btnImprimirComedor_Click()
    Dim stDocName As String, strW As String

    stDocName = "rptServiciosComedor"
    'strW = "Fecha = " & CLng(CDate(Me.txtDesde))
    On Error Resume Next
    DoCmd.OpenReport stDocName, acPreview, , strW
End Sub

Private Sub btnImprimirSalas_Click()
    Dim stDocName As String

    stDocName = "rptParteG_Salas"
    On Error Resume Next
    DoCmd.OpenReport stDocName, acPreview
End Sub

Private Sub btnReserva_Click()
    If Me.lstReservas.ListIndex = -1 Then Exit Sub
    DoCmd.OpenForm "frmReservas", , , "IdSalaReserva = " & Me.lstReservas.Column(0)
End Sub

Private Sub btnReservas_Click()
    Dim strXML As String, strForm As String
    PonXML strXML, "Fecha", Format(CDate(Me.txtDesde), "yyyy/mm/dd")
    strForm = Nz(DameValorParam("LibroReservasForm"), "frmLibroReservasDia")
    DoCmd.OpenForm strForm, , , , , , strXML
End Sub

Private Sub btnSD_Click()
    Dim lngIdFichaCab As Long, strXML As String
    If Me.lstSerComedor.ListIndex = -1 Then Exit Sub
    lngIdFichaCab = Me.lstSerComedor.Column(5)
    PonXML strXML, "IdFichaCab", lngIdFichaCab
    PonXML strXML, "Fecha", CLng(Me.txtDesde)
    PonXML strXML, "Servicio", Me.lstSerComedor.Column(1)
    DoCmd.OpenForm "subfrmFichasDetServiciosXDia", acFormDS, , "IdFichaCab = " & lngIdFichaCab, , , strXML

End Sub

Private Sub btnVer_Click()
    Dim intR As Integer, strSQL As String
    If Me.lstPartesG.ListIndex = -1 Then Exit Sub
    If IsNull(Me.lstPartesG) Then
        intR = MsgBox("No existe parte para la " & g_strPH & " " & Me.lstPartesG.Column(1) & ", ¿Quiere añadirla?", vbQuestion + vbYesNo)
        If intR = vbNo Then Exit Sub
        strSQL = "INSERT INTO tbPartesG ( Fecha, PH )"
        strSQL = strSQL & " SELECT #" & Format(Me.txtDesde, "mm/dd/yyyy") & "# AS Expr1, " & ConComillas(Me.lstPartesG.Column(1)) & " AS Expr2;"
        CurrentDb.Execute strSQL, dbFailOnError
        Me.lstPartesG = DMax("IdParteG", "tbPartesG")
    End If
    DoCmd.OpenForm "subfrmPartesG", , , "IdParteG = " & Me.lstPartesG, , acDialog
    Me.lstPartesG.Requery
End Sub

Private Sub btnVer2_Click()
    Dim intR As Integer, strSQL As String
    If Me.lstPartesD.ListIndex = -1 Then Exit Sub
    If IsNull(Me.lstPartesD) Then
        intR = MsgBox("No existe parte para la " & g_strPH & " " & Me.lstPartesD.Column(1) & ", ¿Quiere añadirla?", vbQuestion + vbYesNo)
        If intR = vbNo Then Exit Sub
        strSQL = "INSERT INTO tbPartesG ( Fecha, PH )"
        strSQL = strSQL & " SELECT #" & Format(Me.txtDesde, "mm/dd/yyyy") & "# AS Expr1, " & ConComillas(Me.lstPartesD.Column(1)) & " AS Expr2;"
        CurrentDb.Execute strSQL, dbFailOnError
        Me.lstPartesD = DMax("IdParteG", "tbPartesG")
    End If
    DoCmd.OpenForm "subfrmPartesD", , , "IdParteG = " & Me.lstPartesD, , acDialog
    Me.lstPartesD.Requery
End Sub

Private Sub cmbGrupo_AfterUpdate()
    Call txtDesde_AfterUpdate
    
    'Dim strSQL As String
    'If Not Me.txtAl.Visible Then
    '    strSQL = "SELECT * FROM qryPartesG"
    '    If Me.cmbGrupo <> 0 Then strSQL = strSQL & " WHERE IdGrupoPlaning = " & Me.cmbGrupo
    '    Pon_qryPartesGSQL CDate(Me.txtDesde), Me.cmbGrupo
    '    Me.lstPartesG.RowSource = "qryPartesG"
    'Else
    '    Pon_qryPartesGSemanalSQL CDate(Me.txtDel), Me.cmbGrupo
    '    Me.lstPartesG.RowSource = "qryPartesGSemanal"
    'End If
    'Me.lstPartesG.Requery
End Sub

Private Sub cmbSer_AfterUpdate()
    CargaListas
End Sub

Private Sub Form_Load()
    ''Traducir me
    Dim intVer As Integer, ctl As Control
    CentrarTodoFRM Me, Me.cdrCentrar, , False
    Me.lstPartesD.Left = Me.lstPartesG.Left
    CargarParam Me
    Me.tab0 = Nz(DameValorParam(Me.Name & "_tab0"), 0)
    If Me.tab0 = 0 Then
        Call ParteGSemanalSN_Click
        Call ParteGSemanalSN_AfterUpdate
        'Call cmbGrupo_AfterUpdate
    End If
    Call txtDesde_AfterUpdate
    Me.pge1.Visible = Nz(DameValorParam("PartesG_Habitaciones"), True)
    If Me.pge1.Visible Then
        intVer = Nz(DameValorParam("PartesG_Desayunos"), False)
        For Each ctl In Me.pge1.Controls
            If InStr(ctl.Tag, "desayunos") > 0 Then ctl.Visible = intVer
        Next ctl
        If intVer = False Then
            Me.lstPartesG.Height = 9 * TC_CmToPoints
        Else
            Me.lstPartesG.Height = 4 * TC_CmToPoints
        End If
        Me.lblObservacionesGeneral.Top = Me.lstPartesG.Top + Me.lstPartesG.Height
        Me.ObservacionesGeneral.Top = Me.lblObservacionesGeneral.Top
    End If
    Me.pge4.Visible = Nz(DameValorParam("PartesG_Comedor"), True)
    If Me.pge4.Visible Then PonListaServicios Me.cmbSer, True
    Me.pge2.Visible = Nz(DameValorParam("PartesG_Salas"), True)
    Me.pge3.Visible = Nz(DameValorParam("PartesG_Empleados"), True)
            
    
End Sub

Private Sub Form_Unload(Cancel As Integer)
    ComprobarParam Me, Cancel, False
End Sub

Private Sub lstPartesD_DblClick(Cancel As Integer)
    Call btnVer2_Click
End Sub

Private Sub lstPartesG_DblClick(Cancel As Integer)
    If Me.btnVer.Visible Then Call btnVer_Click
End Sub

Private Sub lstSerComedor_DblClick(Cancel As Integer)
    Call btnSD_Click
End Sub

Private Function PonObservaciones(strObservacionesX As String)
    Dim strSQL As String, rs As Recordset, dt As Date
    dt = CDate(Nz(Me.txtDesde, 0))
    Set rs = CurrentDb.OpenRecordset("SELECT * FROM tbPartesGCab WHERE Fecha = " & CLng(dt), dbOpenDynaset)
    If rs.EOF Then
        rs.AddNew
        rs("Fecha") = dt
    Else
        rs.Edit
    End If
    rs(strObservacionesX) = IIf(IsNull(Me(strObservacionesX)), Null, Me(strObservacionesX))
    rs.Update
End Function

Private Sub ParteGSemanalSN_AfterUpdate()
    If Me.ParteGSemanalSN = False Then
        Me.lstPartesG.RowSource = "qryPartesG"
        Me.lstPartesG.ColumnCount = 5
        'Me.lstPartesG.ColumnWidths = "0 cm;2 cm;6 cm;1,3 cm;3 cm;0 cm;0 cm;0 cm;9 cm"
        Me.lstPartesG.ColumnWidths = "0cm;2cm;10cm;1,3cm;6cm"
    Else
        Me.lstPartesG.RowSource = "qryPartesGSemanal"
        Me.lstPartesG.ColumnCount = 8
        Me.lstPartesG.ColumnWidths = "2,5 cm;2,5 cm;2,5 cm;2,5 cm;2,5 cm;2,5 cm;2,5 cm;2,5 cm"
    End If
End Sub

Private Sub ParteGSemanalSN_Click()
    On Error GoTo HandleError
    If Me.ParteGSemanalSN = True Then
        Me.lblParteSemanal.Caption = "Parte Semanal del                     al"
    Else
        Me.lblParteSemanal.Caption = "Parte Semanal"
    End If
    Me.txtDel.Visible = Nz(Me.ParteGSemanalSN, False) And Me.ParteGSemanalSN.Visible
    Me.txtAl.Visible = Me.txtDel.Visible
    Me.btnVer.Visible = Not Me.txtDel.Visible
    Me.txtDesde.Visible = Not Me.txtDel.Visible
    
HandleExit:
    Exit Sub
HandleError:
    MsgBox Err.Description
    Resume HandleExit
End Sub

Private Sub PartesG_TraerNotasDeFichaSN_AfterUpdate()
    PonValorParamAC , Me.Name & "_"
End Sub

Private Sub PartesGDiasCambioSabanas_AfterUpdate()
    PonValorParamAC , Me.Name & "_"
End Sub

Private Sub tab0_Change()
    'Me.btnGenerarParte.Visible = Me.tab0 = 0
    Me.ParteGSemanalSN.Visible = Me.tab0 = 0
    PonValorParam Me.Name & "_tab0", Me.tab0, 4
    Call ParteGSemanalSN_Click
    If Me.ParteGSemanalSN.Visible And Me.ParteGSemanalSN Then Call ParteGSemanalSN_AfterUpdate
    CargaListas
End Sub

Private Sub txtDesde_AfterUpdate()
    If True Then 'Nz(DameValorParam("PartesG_GenerarAutoSN"), True) = True Then
        If Me.txtDel.Visible = False Then
            GenerarPartesGobernanta CDate(Me.txtDesde), , Me.cmbGrupo
        Else
            GenerarPartesGobernantaSemana CDate(Me.txtDesde), Me.cmbGrupo
        End If
    End If
    If Me.txtDel.Visible = False Then
        Pon_qryPartesGSQL CDate(Me.txtDesde), Me.cmbGrupo
        Me.lstPartesG.RowSource = "qryPartesG"
    Else
        Pon_qryPartesGSemanalSQL CDate(Me.txtDesde), Me.cmbGrupo
        Me.lstPartesG.RowSource = "qryPartesGSemanal"
    End If
    Me.lstPartesG.Requery
    Me.lstPartesD.Requery
    CargaListas
    'Me.ObservacionesGeneralPG = DameValorParam("ObservacionesGeneralPG_" & Format(Me.txtDesde, "dd/mm/yyyy"))
    Me.ObservacionesGeneral = DLookup("ObservacionesGeneral", "tbPartesGCab", "Fecha = " & CLng(CDate(Me.txtDesde)))
    Me.ObservacionesDesayunos = DLookup("ObservacionesDesayunos", "tbPartesGCab", "Fecha = " & CLng(CDate(Me.txtDesde)))
    Me.ObservacionesComedor = DLookup("ObservacionesComedor", "tbPartesGCab", "Fecha = " & CLng(CDate(Me.txtDesde)))
    Me.ObservacionesSalas = DLookup("ObservacionesSalas", "tbPartesGCab", "Fecha = " & CLng(CDate(Me.txtDesde)))
    Me.ObservacionesPersonal = DLookup("ObservacionesPersonal", "tbPartesGCab", "Fecha = " & CLng(CDate(Me.txtDesde)))
End Sub

Private Sub txtDesde_BeforeUpdate(Cancel As Integer)
    If Not IsDate(Me.txtDesde) Then
        MsgBox "Debe introducir una fecha"
        Cancel = True
    End If
End Sub

Private Sub txtDesde_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim varFecha As Variant
    If KeyCode = vbKeyF4 Then
        varFecha = adhDoCalendar(Me.txtDesde)
        If IsDate(varFecha) Then
            Me.txtDesde = varFecha
        End If
    End If
End Sub


Private Sub txtHasta_BeforeUpdate(Cancel As Integer)
    If Not IsDate(Me.txtHasta) Then
        MsgBox "Debe introducir una fecha"
        Cancel = True
    End If
End Sub

Private Sub txtHasta_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim varFecha As Variant
    If KeyCode = vbKeyF4 Then
        varFecha = adhDoCalendar(Me.txtHasta)
        If IsDate(varFecha) Then
            Me.txtHasta = varFecha
        End If
    End If
    
End Sub

Public Sub CargaListas()
    Dim strSQL As String, dt As Date
    dt = CDate(Me.txtDesde)
    Select Case Me.tab0
        Case 2
            strSQL = "SELECT tbSalasReservas.IdSalaReserva, tbSalas.Sala, tbSalasReservas.Hora, tbSalasReservas.NombreReserva as [Nombre Reserva], tbSalasReservas.IdFichaCab as [Ficha Estancia Nº]"
            strSQL = strSQL & " FROM tbSalas INNER JOIN tbSalasReservas ON tbSalas.IdSala = tbSalasReservas.IdSala"
            strSQL = strSQL & " WHERE (((tbSalasReservas.Fecha)=" & CLng(dt) & "))"
            strSQL = strSQL & " ORDER BY [Hora]"
            Me.lstReservas.RowSource = strSQL
        Case 3
            strSQL = "SELECT [Nombre] & ' ' & [Apellidos] AS Empleado_a, Format([HoraIni],'HH:NN') AS Ini, Format([HoraFin],'HH:NN') AS Fin, Format([HoraFin]-[HoraIni],'HH:NN') AS Trabajado"
            strSQL = strSQL & " FROM tbEmpl INNER JOIN tbEmpl_Presencia ON tbEmpl.IdEmpl = tbEmpl_Presencia.IdEmpl"
            strSQL = strSQL & " WHERE tbEmpl_Presencia.Fecha =" & CLng(dt)
            strSQL = strSQL & " ORDER BY Format([HoraIni],'HH:NN');"
            Me.lstEmplPre.RowSource = strSQL
        Case 1
            Generar_auxServiciosComedor dt, Me.cmbSer, 1
            strSQL = "SELECT auxServiciosComedor.Id, auxServiciosComedor.Servicio, auxServiciosComedor.Grupo, auxServiciosComedor.Pax, auxServiciosComedor.Notas, auxServiciosComedor.IdFichaCab AS [Nº Ficha]"
            strSQL = strSQL & " FROM auxServiciosComedor"
            strSQL = strSQL & " WHERE auxServiciosComedor.Fecha=" & CLng(dt)
            'If Me.cmbSer <> 0 Then strSQL = strSQL & " AND Servicio = " & ConComillas(Me.cmbSer.Column(1))
            Me.lstSerComedor.RowSource = strSQL
    End Select

End Sub
